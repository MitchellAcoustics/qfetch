name: Publish to PyPI

on:
  workflow_dispatch:
    inputs:
      bump_rule:
        description: 'Version bump rule (major/minor/patch)'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
        default: 'patch'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "0.4.29"
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install the project
      run: uv sync --all-extras --dev

    - name: Run tests
      run: uv run pytest tests

  build-and-publish-testpypi:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Required for PyPI trusted publishing
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "0.4.29"
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Set up Python
      run: uv python install 3.12

    - name: Install build dependencies
      run: uv pip install build

    - name: Build package
      run: python -m build

    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/

    - name: Test install from TestPyPI
      run: |
        sleep 60  # Wait for package to be available
        uv pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ quartofetch

  version-and-publish:
    needs: build-and-publish-testpypi
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write  # Required for PyPI trusted publishing
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "0.4.29"
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Set up Python
      run: uv python install 3.12

    - name: Configure Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Install bump2version
      run: uv pip install bump2version

    - name: Bump version
      run: |
        bump2version ${{ inputs.bump_rule }}
        git push
        git push --tags

    - name: Install build dependencies
      run: uv pip install build

    - name: Build package
      run: python -m build

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

    - name: Create GitHub Release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        NEW_VERSION=$(python setup.py --version)
        gh release create "v${NEW_VERSION}" \
          --title "Release v${NEW_VERSION}" \
          --notes "Release v${NEW_VERSION}" \
          dist/*